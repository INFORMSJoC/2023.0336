#!/usr/bin/env python3

import os
import sys
import pandas as pd
import json
import pickle
import configargparse
from src.components import defaults
import src.utils as utils
import run.helpers as run_helpers
import run.sensitivity.helpers as sensitivity_helpers

"""
Script to complile single microgrid design results, generated by
rightsize_sensitivity_single_design.py, including design modifications

Command-line inputs:
-c --config_file            config file with command-line options
--results_dir               directory for specific microgrid design
--sensitivity_timestamp     sensitivity subdirectory timestamp
"""

PARSER = configargparse.ArgParser()
PARSER.add_argument("-c", "--config_file", is_config_file=True)
PARSER.add_argument("--results_dir", required=True)
PARSER.add_argument("--sensitivity_timestamp", required=True)
DESIGN_DIR = PARSER.parse_args().results_dir
TIMESTAMP_DIR = PARSER.parse_args().sensitivity_timestamp
SENSITIVITY_FOLDER = os.path.join(DESIGN_DIR,sensitivity_helpers.SENSITIVITY_FOLDER)
ARRAY = []
for DESIGN_MOD in os.listdir(SENSITIVITY_FOLDER):
    DESIGN_MOD_PATH = os.path.join(
        SENSITIVITY_FOLDER,
        DESIGN_MOD,
    )
    if not os.path.isdir(os.path.join(DESIGN_MOD_PATH)):
        continue
    try:
        with open(os.path.join(DESIGN_MOD_PATH,utils.MICROGRID_DESIGN_FILENAME),'rt') as f:
            DESIGN_SPEC = json.load(f)
        with open(os.path.join(DESIGN_MOD_PATH,sensitivity_helpers.SENSITIVITY_MICROGRID_CAPACITY_INCREASE_FILENAME),'rt') as f:
            INCREASE_SPEC = json.load(f)
    except Exception as error:
        raise Exception("Missing files in "+DESIGN_MOD_PATH+"\n"+str(error))
    for SENSITIVITY_ANALYSIS in os.listdir(os.path.join(DESIGN_MOD_PATH,TIMESTAMP_DIR)):
        SENSITIVITY_ANALYSIS_PATH = os.path.join(DESIGN_MOD_PATH,TIMESTAMP_DIR,SENSITIVITY_ANALYSIS)
        if not os.path.isdir(os.path.join(SENSITIVITY_ANALYSIS_PATH)):
            continue
        try:
            with open(os.path.join(SENSITIVITY_ANALYSIS_PATH,"deficits.pkl"),'rb') as f:
                DEFICITS = pickle.load(f)
            with open(os.path.join(SENSITIVITY_ANALYSIS_PATH,run_helpers.PARAMS_PICKLE_FILENAME),'rb') as f:
                PARAMS = pickle.load(f)
                DOE_PARAMS = PARAMS[run_helpers.WEATHER_PARAMS]
            ARRAY.append(
                [DOE_PARAMS[i] for i in sorted(DOE_PARAMS.keys())] + [
                    DESIGN_SPEC[defaults.DIESEL_GENERATOR]-INCREASE_SPEC[defaults.DIESEL_GENERATOR],
                    DESIGN_SPEC[defaults.BATTERY]-INCREASE_SPEC[defaults.BATTERY],
                    DESIGN_SPEC[defaults.PHOTOVOLTAIC_PANEL]-INCREASE_SPEC[defaults.PHOTOVOLTAIC_PANEL],
                    DESIGN_SPEC[defaults.DIESEL_GENERATOR],
                    DESIGN_SPEC[defaults.BATTERY],
                    DESIGN_SPEC[defaults.PHOTOVOLTAIC_PANEL],
                ] + DEFICITS,
            )
        except Exception as error:
            raise Exception("Missing files in "+SENSITIVITY_ANALYSIS_PATH+"\n"+str(error))

INDICES = sorted(DOE_PARAMS.keys()) + [
    defaults.DIESEL_GENERATOR + sensitivity_helpers.SENSITIVITY_COMPONENT_ORIGINAL_TAG,
    defaults.BATTERY + sensitivity_helpers.SENSITIVITY_COMPONENT_ORIGINAL_TAG,
    defaults.PHOTOVOLTAIC_PANEL + sensitivity_helpers.SENSITIVITY_COMPONENT_ORIGINAL_TAG,
    defaults.DIESEL_GENERATOR,
    defaults.BATTERY,
    defaults.PHOTOVOLTAIC_PANEL
]
DF = pd.DataFrame(
    ARRAY,
    columns=INDICES+[str(i) for i in range(len(ARRAY[0])-6-len(DOE_PARAMS))]
)
DF = DF.set_index(INDICES)
DF_DESCRIBE = DF.apply(pd.DataFrame.describe, axis=1)
pd.concat([DF_DESCRIBE, DF], axis=1).to_csv(
    os.path.join(SENSITIVITY_FOLDER,TIMESTAMP_DIR+sensitivity_helpers.SENSITIVITY_FILENAME)
)
